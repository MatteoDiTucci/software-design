https://software-design.matteoditucci.com/
https://software-design.matteoditucci.com/introduction/introduction.html
https://software-design.matteoditucci.com/passes-all-tests/introduction.html
https://software-design.matteoditucci.com/passes-all-tests/test-pyramid.html
https://software-design.matteoditucci.com/passes-all-tests/if-testing-is-hard-inject.html
https://software-design.matteoditucci.com/passes-all-tests/test-doubles.html
https://software-design.matteoditucci.com/passes-all-tests/test-driven-development.html
https://software-design.matteoditucci.com/passes-all-tests/test-coverage-is-not-enough.html
https://software-design.matteoditucci.com/passes-all-tests/tests-must-be-reproducible.html
https://software-design.matteoditucci.com/passes-all-tests/no-production-code-constants-in-tests.html
https://software-design.matteoditucci.com/passes-all-tests/do-not-test-libraries.html
https://software-design.matteoditucci.com/passes-all-tests/component-tests-vs-end-to-end-tests-vs-monitoring-tradeoffs.html
https://software-design.matteoditucci.com/passes-all-tests/expand-and-contract.html
https://software-design.matteoditucci.com/passes-all-tests/contract-testing.html
https://software-design.matteoditucci.com/passes-all-tests/performance-tests.html
https://software-design.matteoditucci.com/passes-all-tests/how-to-test-ui.html
https://software-design.matteoditucci.com/passes-all-tests/linting.html
https://software-design.matteoditucci.com/expresses-intent/introduction.html
https://software-design.matteoditucci.com/expresses-intent/naming.html
https://software-design.matteoditucci.com/expresses-intent/single-responsibility-principle.html
https://software-design.matteoditucci.com/expresses-intent/deep-and-narrow-classes.html
https://software-design.matteoditucci.com/expresses-intent/immutability.html
https://software-design.matteoditucci.com/expresses-intent/small-classes-and-short-methods.html
https://software-design.matteoditucci.com/expresses-intent/liskov-substitution-principle.html
https://software-design.matteoditucci.com/expresses-intent/usually-composition-is-better-than-inheritance.html
https://software-design.matteoditucci.com/expresses-intent/generalise-edge-cases.html
https://software-design.matteoditucci.com/expresses-intent/comment-the-why.html
https://software-design.matteoditucci.com/expresses-intent/visual-indentation.html
https://software-design.matteoditucci.com/expresses-intent/folder-structure.html
https://software-design.matteoditucci.com/expresses-intent/wishful-thinking.html
https://software-design.matteoditucci.com/expresses-intent/test-naming.html
https://software-design.matteoditucci.com/does-not-repeat-itself/introduction.html
https://software-design.matteoditucci.com/expresses-intent/one-single-authoritative-representation.html
https://software-design.matteoditucci.com/does-not-repeat-itself/do-not-abstract-by-visual-pattern-matching.html
https://software-design.matteoditucci.com/does-not-repeat-itself/dependency-inversion-principle.html
https://software-design.matteoditucci.com/does-not-repeat-itself/open-closed-principle.html
https://software-design.matteoditucci.com/does-not-repeat-itself/interface-segregation-principle.html
https://software-design.matteoditucci.com/does-not-repeat-itself/information-hiding.html
https://software-design.matteoditucci.com/does-not-repeat-itself/polymorphism.html
https://software-design.matteoditucci.com/does-not-contain-superfluous-parts/introduction.html
https://software-design.matteoditucci.com/does-not-contain-superfluous-parts/you-are-not-going-to-need-it.html
https://software-design.matteoditucci.com/does-not-contain-superfluous-parts/clarify-what-is-superfluous.html
https://software-design.matteoditucci.com/does-not-contain-superfluous-parts/do-not-abuse-design-patterns.html